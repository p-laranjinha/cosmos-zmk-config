#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/behaviors.h>

#define DEFAULT 0
#define GAME 1
#define NUMPAD 2
#define FN 3

/ {
    // https://zmk.dev/docs/keymaps/behaviors/hold-tap?examples=mo_tog#custom-hold-tap-examples
    behaviors {
        mo_tog: behavior_mo_tog {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&tog>;
        };
    };
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp F1    &kp F2    &kp F3    &kp F4    &kp F5    &kp F6    &to GAME           &kp PSCRN    &kp F7    &kp F8    &kp F9    &kp F10   &kp F11   &kp F12
                &kp EQUAL &kp N1    &kp N2    &kp N3    &kp N4    &kp N5    &to NUMPAD         &kp C_MUTE   &kp N6    &kp N7    &kp N8    &kp N9    &kp N0    &kp MINUS
                &kp TAB   &kp Q     &kp W     &kp E     &kp R     &kp T     &kp F13            &kp C_PP     &kp Y     &kp U     &kp I     &kp O     &kp P     &kp BSLH
                &kp ESC   &kp A     &kp S     &kp D     &kp F     &kp G     &kp F14            &kp C_VOL_UP &kp H     &kp J     &kp K     &kp L     &kp SEMI  &kp SQT
                &kp GRAVE &kp Z     &kp X     &kp C     &kp V     &kp B     &kp F15            &kp C_VOL_DN &kp N     &kp M     &kp COMMA &kp DOT   &kp FSLH  &kp RALT
                                    &kp LGUI  &mo_tog FN FN                                                                     &kp LBKT  &kp RBKT
                                                        &kp LALT  &kp LSHFT &kp LCTRL          &kp RCTRL    &kp RSHFT &kp RGUI
                                                                  &kp BSPC  &kp DEL            &kp ENTER    &kp SPACE
            >;
        };

        game_layer {
            bindings = <
                &trans    &trans    &trans    &trans    &trans    &trans    &to DEFAULT        &trans    &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &trans    &trans    &trans    &trans    &trans    &to DEFAULT        &trans    &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &kp N1    &kp Q     &kp N3    &kp E     &kp R     &kp T              &trans    &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &kp LSHFT &kp A     &kp W     &kp D     &kp F     &kp G              &trans    &trans    &trans    &trans    &trans    &trans    &trans
                &trans    &kp LCTRL &kp Z     &kp S     &kp C     &kp V     &kp B              &trans    &trans    &trans    &trans    &trans    &trans    &trans
                                    &trans    &kp X                                                                         &trans    &trans
                                                        &trans    &kp SPACE &kp ENTER          &trans    &trans    &trans
                                                                  &trans    &trans             &trans    &trans
            >;
        };

        numpad_layer {
            bindings = <
                &trans    &trans         &trans         &trans         &trans          &trans    &to DEFAULT        &trans    &trans    &trans      &trans        &trans          &trans       &trans
                &trans    &trans         &trans         &trans         &trans          &trans    &to DEFAULT        &trans    &kp LPAR  &kp KP_NLCK &kp KP_DIVIDE &kp KP_MULTIPLY &kp KP_MINUS &trans
                &trans    &msc SCRL_UP   &mkp LCLK      &mkp MCLK      &mkp RCLK       &trans    &trans             &trans    &kp RPAR  &kp KP_N7   &kp KP_N8     &kp KP_N9       &kp KP_PLUS  &trans
                &trans    &msc SCRL_DOWN &mmv MOVE_LEFT &mmv MOVE_UP   &mmv MOVE_RIGHT &mkp MB5  &trans             &trans    &kp PRCNT &kp KP_N4   &kp KP_N5     &kp KP_N6       &kp KP_ENTER &trans
                &trans    &trans         &msc SCRL_LEFT &mmv MOVE_DOWN &msc SCRL_RIGHT &mkp MB4  &trans             &trans    &kp COMMA &kp KP_N1   &kp KP_N2     &kp KP_N3       &kp KP_ENTER &trans
                                         &trans         &trans                                                                                      &kp KP_N0     &kp KP_DOT
                                                                       &trans          &trans    &trans             &trans    &trans    &kp KP_N0
                                                                                       &trans    &trans             &trans    &trans
            >;
        };

        fn_layer {
            bindings = <
                &sys_reset   &bootloader  &studio_unlock &trans       &trans       &trans       &trans            &kp C_BRI_UP &trans       &trans       &trans       &trans       &bootloader  &sys_reset
                &bt BT_CLR   &bt BT_SEL 0 &bt BT_SEL 1   &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &trans            &kp C_BRI_DN &trans       &trans       &trans       &trans       &trans       &trans
                &out OUT_BLE &out OUT_USB &trans         &trans       &trans       &trans       &trans            &trans       &trans       &trans       &trans       &trans       &trans       &trans
                &trans       &trans       &trans         &trans       &trans       &trans       &trans            &kp C_NEXT   &kp HOME     &kp LEFT     &kp UP       &kp RIGHT    &kp PG_UP    &trans
                &trans       &trans       &trans         &trans       &trans       &trans       &kp CAPSLOCK      &kp C_PREV   &kp END      &trans       &kp DOWN     &trans       &kp PG_DN    &trans
                                          &trans         &trans                                                                                          &trans       &trans  
                                                                      &trans       &trans       &trans            &trans       &trans       &trans
                                                                                   &trans       &trans            &trans       &trans
            >;
        };
    };
 };
